name: CI

permissions:
  id-token: write
  contents: read

# triggers on push to any branch
on:
  pull_request:
# on:
#   push:
#     branches:
#       - main
jobs:
  build-test-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1" # latest LTS at the time this is written.
      - name: build & lint
        working-directory: "./frontend"
        run: |
          npm install
          npm run lint
      - name: test
        working-directory: "./frontend"
        run: |
          npm test

  build-test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1" # latest LTS at the time this is written.
      - name: build & lint
        working-directory: "./backend"
        run: |
          ls
          npm install
          npm run lint
      - name: Run unit tests
        working-directory: "./backend"
        run: |
          npm test
  # Playwright end-to-end test
  chrome-e2e-test:
    needs: [build-test-backend, build-test-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1" # latest LTS at the time this is written.
          
      - name: Set frontend envs
        working-directory: "./frontend"
        run: |
          rm .env
          echo "VITE_BACKEND_API_BASE_URL=$VITE_BACKEND_API_BASE_URL" >> .env
          echo "VITE_LINKEDIN_CLIENT_ID=$VITE_LINKEDIN_CLIENT_ID" >> .env
          echo "FRONT_END_BASE_URL=http://give-it-a-good-name:5000" >> .env
          echo "VITE_LINKEDIN_AUTH_REDIRECTURI=http://give-it-a-good-name:5000/signin" >> .env
        env:
          # node creds
          VITE_BACKEND_API_BASE_URL: http://localhost:3000
          VITE_LINKEDIN_CLIENT_ID: 86yqr14akub4tu
      - name: Set node configs
        working-directory: "./backend"
        run: |
          rm .env
          echo "DATABASE_URL=$DATABASE_URL" >> .env
          echo "SWAGGER_API_BASE_URL=$SWAGGER_API_BASE_URL" >> .env、
          echo "DB_ADMIN_EMAIL=$DB_ADMIN_EMAIL" >> .env
          echo "DB_ADMIN_PASSWORD_ENCRYPTED=$DB_ADMIN_PASSWORD_ENCRYPTED" >> .env
          echo "LINKEDIN_CLIENT_ID=$LINKEDIN_CLIENT_ID" >> .env
          echo "LINKEDIN_CLIENT_SECRET=$LINKEDIN_CLIENT_SECRET" >> .env
          echo "LINKEDIN_REDIRECT_URI=$LINKEDIN_REDIRECT_URI" >> .env
          echo "LINKEDIN_TOKEN_URL=$LINKEDIN_TOKEN_URL" >> .env
          echo "BACKEND_API_BASE_URL=http://$EC2_INSTANCE_PUBLIC_DNS:3000" >> .env
          echo "FRONT_END_BASE_URL=http://$EC2_INSTANCE_PUBLIC_DNS:5000" >> .env
          echo "COOKIE_KEY=$COOKIE_KEY" >> .env
          echo "SMTP_EMAIL_ENABLED=$SMTP_EMAIL_ENABLED" >> .env
          echo "SMTP_EMAIL_USER=$SMTP_EMAIL_USER" >> .env
          echo "SMTP_EMAIL_PASSWORD=$SMTP_EMAIL_PASSWORD" >> .env
        env:
          # node creds
          DATABASE_URL: postgresql://postgres:postgres@postgres:5432/test?schema=public
          SWAGGER_API_BASE_URL: http://give-it-a-good-name:3000
          DB_ADMIN_PASSWORD_ENCRYPTED: $2a$10$tRs1k3ar2cL5qY3XH2K8ZeOER2BIj1veqSoMDuFyAqafaAwoqadE6
          DB_ADMIN_EMAIL: fellows@fellows.com
          LINKEDIN_CLIENT_ID: 86yqr14akub4tu
          LINKEDIN_CLIENT_SECRET: 3j80hVRkhdubWQWk
          LINKEDIN_REDIRECT_URI: /api/auth/linkedin/redirect
          LINKEDIN_TOKEN_URL: https://www.linkedin.com/oauth/v2/accessToken
          COOKIE_KEY: fellowappsteam10
          SMTP_EMAIL_ENABLED: true
          SMTP_EMAIL_USER: liuzhuo56@gmail.com
          SMTP_EMAIL_PASSWORD: kwhz cgbd pupm brnv
      - name: Set docker-compose configs
        working-directory: "./"
        run: |
          rm .env
          echo "POSTGRES_USER=$POSTGRES_USER" >> .env
          echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
          echo "POSTGRES_DB=$POSTGRES_DB" >> .env
          echo "PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL" >> .env
          echo "PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD" >> .env
        env:
          ME_CONFIG_BASICAUTH_USERNAME: ${{ secrets.ME_CONFIG_BASICAUTH_USERNAME }}
          ME_CONFIG_BASICAUTH_PASSWORD: ${{ secrets.ME_CONFIG_BASICAUTH_PASSWORD }}
          #postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
          PGADMIN_DEFAULT_EMAIL: ${{secrets.PGADMIN_DEFAULT_EMAIL}}
          PGADMIN_DEFAULT_PASSWORD: ${{secrets.PGADMIN_DEFAULT_PASSWORD}}
      - name: frontend build
        working-directory: "./frontend"
        run: |
          npm install
          npm run build
      - name: Start servers
        working-directory: "./scripts"
        run: |
          chmod +x start-ci.sh
          (./start-ci.sh)&
          npm install -g wait-on
          npx wait-on http://localhost:5000/ --timeout 120000
          npx wait-on http://localhost:3000/api/api-docs --timeout 120000
      - name: Build and Run Playwright E2E tests
        working-directory: "./e2eTests"
        run: |
          echo "REACT_APP_URL=$REACT_APP_URL" >> .env
          npm install
          npx playwright install --with-deps chromium
          npm run test:e2e
        env:
          REACT_APP_URL: http://localhost:5000