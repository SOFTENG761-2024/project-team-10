# Frontend server for academicfellows.com
upstream frontend_server {
    server give-it-a-good-name:5000;  # Docker service name of the frontend
}

# Backend server for api.academicfellows.com
upstream backend_server {
    server give-it-a-good-name:3000;  # Docker service name of the backend
}

# Frontend (academicfellows.com)
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    
    server_name academicfellows.com;
    
    # SSL Certificates for academicfellows.com
    ssl_certificate /etc/nginx/conf.d/cert.crt;
    ssl_certificate_key /etc/nginx/conf.d/pk.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://frontend_server;
        
        # Headers to forward original request information
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support if needed
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 600s;
    }
}

# Backend (api.academicfellows.com)
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    
    server_name api.academicfellows.com;
    
    # SSL Certificates for academicfellows.com
    ssl_certificate /etc/nginx/conf.d/cert.crt;
    ssl_certificate_key /etc/nginx/conf.d/pk.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://backend_server;

        # Headers to forward original request information
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support if needed
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 600s;
    }
}